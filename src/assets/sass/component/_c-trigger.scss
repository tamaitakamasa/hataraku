// component/_c-trigger.scss

@use "../global" as g;

// Variables
$trigger-height: 36px;
$trigger-line-width: 1px;
$trigger-line-spacing: 12px;
$trigger-line-color: rgba($color: #000000, $alpha: 0.8);
$translate-x: ($trigger-line-width + $trigger-line-spacing);

// Main trigger container
.c-trigger {
  $this: &;

  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  cursor: pointer;

  // Trigger inner container
  &__inner {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
    width: $trigger-line-width * 3 + $trigger-line-spacing * 2;
    height: $trigger-height;

    @include g.mq(lg) {
      // width: $trigger-width * 0.5;
      // height: ($trigger-line-height * 3 + $trigger-line-spacing * 2) * 0.5;
    }
  }

  &__label {
    @include g.clamp(margin-top, 10, 5);
    @include g.clamp(font-size, 13, 11);
    font-weight: 500;
    line-height: 1;
  }

  // Trigger lines
  &__line {
    width: $trigger-line-width;
    height: 100%;
    background-color: $trigger-line-color;
    transition: all 0.3s;

    &:nth-of-type(1) {
      height: calc($trigger-height * 0.6);

      @at-root #{$this}--active & {
        height: 100%;
      }
    }

    &:nth-of-type(2) {
      height: calc($trigger-height * 0.8);
    }

    // @include g.mq(lg) {
    //   height: $trigger-line-height * 0.5;
    // }

    @at-root .c-trigger--active & {
      // Styles for when the trigger is active (menu open)
      &:nth-child(1) {
        transform: translateX($translate-x) rotate(300deg);

        // @include g.mq(lg) {
        //   transform: translateY($translate-y * 0.5) rotate(330deg);
        // }
      }

      &:nth-child(2) {
        opacity: 0;
      }

      &:nth-child(3) {
        transform: translateX($translate-x * -1) rotate(-300deg);

        // @include g.mq(lg) {
        //   transform: translateY($translate-y * 0.5 * -1) rotate(-330deg);
        // }
      }
    }
  }
}
